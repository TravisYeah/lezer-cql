@top BooleanExpression { booleanTerm }

booleanTerm {
	primary |
	BooleanAnd |
	BooleanOr |
	NegatedBooleanTerm
}

primary {
	predicate |
	BooleanLiteral
}

predicate {
	comparisonPredicate
}

comparisonPredicate {
	BinaryComparisonPredicate 
}

BinaryComparisonPredicate {
	scalarExpression ComparisonOperator scalarExpression 
}

scalarExpression {
	BooleanLiteral
}

ComparisonOperator {
	Eq |
	Neq |
	Le |
	Gt |
	Leq |
	Gte
}

NegatedBooleanTerm {
	"not" booleanTerm
}

BooleanAnd {
	booleanTerm !and "and" booleanTerm
}

BooleanOr {
	booleanTerm !or "or" booleanTerm
}

BooleanLiteral { True | False }

True { "TRUE" | "true" }
False { "FALSE" | "false" }

@skip { space }

@precedence {
  and @left
  or @left
}

@tokens {
  space { @whitespace+ }
	Eq { "=" }
	Neq { "<" ">" }
	Le { "<" }
	Gt { ">" }
	Leq { "<" "=" }
	Gte { ">" "=" }
}

